{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/main.ts","./src/game/puzzle.scene.ts"],"sourcesContent":["import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport Phaser from 'phaser';\n\nimport { PuzzleScene } from '../game/puzzle.scene';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements AfterViewInit, OnDestroy {\n  @ViewChild('gameHost', { static: true }) private readonly gameHost?: ElementRef<HTMLDivElement>;\n\n  readonly title = 'Christmas Puzzle';\n\n  puzzleComplete = false;\n  showDebug = true;\n\n  private game?: Phaser.Game;\n  private sceneEvents?: Phaser.Events.EventEmitter;\n\n  constructor(private readonly cdr: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    if (!this.gameHost) {\n      return;\n    }\n\n    this.launchGame();\n  }\n\n  private launchGame(): void {\n    this.puzzleComplete = false;\n    const host = this.gameHost!.nativeElement;\n    const width = 960;\n    const height = 640;\n\n    this.game = new Phaser.Game({\n      type: Phaser.AUTO,\n      width,\n      height,\n      parent: host,\n      backgroundColor: '#BEC6A8',\n      banner: false,\n      scale: {\n        mode: Phaser.Scale.FIT,\n        autoCenter: Phaser.Scale.CENTER_BOTH,\n        width,\n        height\n      }\n    });\n\n    const emitter = new Phaser.Events.EventEmitter();\n    this.sceneEvents = emitter;\n\n    this.game.scene.add('PuzzleScene', PuzzleScene, true, { emitter, showDebug: this.showDebug });\n\n    emitter.on('puzzle-complete', () => {\n      this.puzzleComplete = true;\n      this.cdr.markForCheck();\n    });\n\n    emitter.on('puzzle-reset', () => {\n      this.puzzleComplete = false;\n      this.cdr.markForCheck();\n    });\n\n    this.cdr.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    if (this.sceneEvents) {\n      this.sceneEvents.removeAllListeners();\n      this.sceneEvents = undefined;\n    }\n\n    if (this.game) {\n      this.game.destroy(true);\n      this.game = undefined;\n    }\n  }\n\n  toggleDebug(): void {\n    this.showDebug = !this.showDebug;\n    if (!this.game) {\n      return;\n    }\n\n    const scene = this.game.scene.getScene('PuzzleScene') as PuzzleScene | undefined;\n    scene?.setDebugVisible(this.showDebug);\n  }\n}\n","<main class=\"shell\">\n  <header class=\"hero\">\n    <h1>{{ title }}</h1>\n    <p>Drag the shards into place to restore the festive star.</p>\n  </header>\n\n<section class=\"board\">\n    <div class=\"controls\">\n      <button type=\"button\" (click)=\"toggleDebug()\">\n        {{ showDebug ? 'Hide' : 'Show' }} Guides\n      </button>\n    </div>\n    <div #gameHost class=\"game-host\" aria-label=\"Puzzle board\"></div>\n  </section>\n</main>\n","import { bootstrapApplication } from '@angular/platform-browser';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { provideRouter } from '@angular/router';\nimport { provideHttpClient } from '@angular/common/http';\n\nimport { AppComponent } from './app/app.component';\n\nbootstrapApplication(AppComponent, {\n  providers: [provideAnimations(), provideRouter([]), provideHttpClient()]\n}).catch((err) => console.error(err));\n","import Phaser from 'phaser';\n\ntype SceneData = {\n  emitter?: Phaser.Events.EventEmitter;\n  showDebug?: boolean;\n};\n\ntype PuzzlePoint = {\n  x: number;\n  y: number;\n};\n\ntype PuzzlePiece = {\n  id: string;\n  points: PuzzlePoint[];\n  anchor: PuzzlePoint;\n};\n\ntype PuzzleConfig = {\n  outline: PuzzlePoint[];\n  pieces: PuzzlePiece[];\n  bounds: PuzzleBounds;\n};\n\ntype PieceRuntime = {\n  id: string;\n  target: Phaser.Math.Vector2;\n  shape: Phaser.GameObjects.Polygon;\n  footprint: Phaser.Math.Vector2[];\n  shapePoints: PuzzlePoint[];\n  placed: boolean;\n  snapTolerance: number;\n  origin: Phaser.Math.Vector2;\n  hitArea: Phaser.Geom.Point[];\n  scatterTarget: Phaser.Math.Vector2;\n  velocity?: Phaser.Math.Vector2;\n  angularVelocity?: number;\n  exploding?: boolean;\n  hasLaunched?: boolean;\n  restPosition?: Phaser.Math.Vector2;\n  restRotation?: number;\n  dragOffset?: Phaser.Math.Vector2;\n  dragPointer?: Phaser.Math.Vector2;\n  dragStartRotation?: number;\n  isDragging?: boolean;\n};\n\ntype PuzzleBounds = {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n  width: number;\n  height: number;\n};\n\nconst FROST_BASE_COLOR = 0xffffff;\nconst SNAP_ANIMATION_DURATION = 180;\nconst SNAP_BASE_FACTOR = 0.09;\nconst SNAP_DEBUG_MULTIPLIER = 2.6;\nconst INTRO_HOLD_DURATION = 1200;\nconst EXPLOSION_STAGGER = 60;\nconst EXPLOSION_GRAVITY = 2200;\nconst EXPLOSION_TRAVEL_TIME = { min: 0.72, max: 0.95 } as const;\nconst EXPLOSION_RADIAL_BOOST = { min: 260, max: 420 } as const;\nconst EXPLOSION_SPIN_RANGE = { min: -2.4, max: 2.4 } as const;\nconst EXPLOSION_BOUNCE_DAMPING = 0.36;\nconst EXPLOSION_GROUND_FRICTION = 0.82;\nconst EXPLOSION_SPIN_DAMPING = 0.7;\nconst EXPLOSION_MIN_REST_SPEED = 40;\nconst EXPLOSION_REST_DELAY = 220;\nconst EXPLOSION_WALL_MARGIN = 64;\nconst EXPLOSION_WALL_DAMPING = 0.42;\n\nconst calculateSnapTolerance = (shape: Phaser.GameObjects.Polygon, multiplier = 1): number => {\n  const bounds = shape.getBounds();\n  const maxAxis = Math.max(bounds.width, bounds.height) || 0;\n  const dynamicTolerance = maxAxis * SNAP_BASE_FACTOR * multiplier;\n  return Phaser.Math.Clamp(dynamicTolerance, 18, 120);\n};\n\nexport class PuzzleScene extends Phaser.Scene {\n  private config?: PuzzleConfig;\n  private emitter?: Phaser.Events.EventEmitter;\n  private pieces: PieceRuntime[] = [];\n  private placedCount = 0;\n  private startTime = 0;\n  private debugOverlay?: Phaser.GameObjects.Graphics;\n  private debugEnabled = true;\n  private guideOverlay?: Phaser.GameObjects.Graphics;\n  private helpLabel?: Phaser.GameObjects.Text;\n  private explosionActive = false;\n  private explosionComplete = false;\n\n  private resetDragState(piece: PieceRuntime): void {\n    piece.isDragging = false;\n    piece.dragOffset = undefined;\n    piece.dragPointer = undefined;\n    piece.dragStartRotation = undefined;\n  }\n\n  private updateScatterTargetFromShape(piece: PieceRuntime): void {\n    piece.scatterTarget = new Phaser.Math.Vector2(\n      piece.shape.x - piece.origin.x,\n      piece.shape.y - piece.origin.y\n    );\n  }\n\n  private stylePieceForBurst(piece: PieceRuntime, depth: number): void {\n    piece.shape.disableInteractive();\n    piece.shape.setDepth(120 + depth);\n    piece.shape.setFillStyle(FROST_BASE_COLOR, 0);\n    piece.shape.setStrokeStyle(2.6, 0x000000, 0.85);\n    piece.shape.setAlpha(1);\n    piece.shape.setScale(1);\n    piece.shape.rotation = 0;\n\n    piece.snapTolerance = 0;\n    piece.velocity = undefined;\n    piece.angularVelocity = undefined;\n    piece.exploding = false;\n    piece.hasLaunched = false;\n    piece.restPosition = undefined;\n    piece.restRotation = undefined;\n    this.resetDragState(piece);\n  }\n\n  private stylePieceForPuzzle(piece: PieceRuntime, depth: number): void {\n    piece.shape.setDepth(30 + depth);\n    piece.shape.setFillStyle(FROST_BASE_COLOR, 0);\n    piece.shape.setStrokeStyle(2.5, 0x000000, 0.9);\n    piece.shape.setAlpha(1);\n    piece.shape.setInteractive(new Phaser.Geom.Polygon(piece.hitArea), Phaser.Geom.Polygon.Contains);\n    if (piece.shape.input) {\n      piece.shape.input.cursor = 'grab';\n    }\n\n    piece.placed = false;\n    piece.exploding = false;\n    piece.hasLaunched = false;\n    piece.velocity = undefined;\n    piece.angularVelocity = undefined;\n    this.resetDragState(piece);\n  }\n\n  private recordRestingState(piece: PieceRuntime): void {\n    piece.restPosition = new Phaser.Math.Vector2(piece.shape.x, piece.shape.y);\n    piece.restRotation = piece.shape.rotation;\n    this.updateScatterTargetFromShape(piece);\n  }\n\n  constructor() {\n    super('PuzzleScene');\n  }\n\n  preload(): void {\n    this.load.text('puzzle-svg', 'assets/pieces/Zeichnung.svg');\n  }\n\n  init(data: SceneData): void {\n    this.emitter = data?.emitter;\n    this.debugEnabled = data.showDebug ?? true;\n  }\n\n  create(): void {\n    const svgText = this.cache.text.get('puzzle-svg');\n    if (!svgText) {\n      throw new Error('Puzzle SVG data missing.');\n    }\n\n    this.config = this.createConfigFromSvg(svgText);\n\n    this.pieces = [];\n    this.placedCount = 0;\n    this.cameras.main.setBackgroundColor('#BEC6A8');\n\n    this.drawGuide();\n    this.setupDragHandlers();\n    this.initializePiecesAtTarget();\n\n    this.helpLabel = this.add\n      .text(this.scale.width * 0.5, this.scale.height - 28, 'Snap pieces inside the glowing outline', {\n        color: '#b7c7ff',\n        fontSize: '20px',\n        fontFamily: 'Segoe UI, Roboto, sans-serif'\n      })\n      .setOrigin(0.5, 0.5)\n      .setVisible(false);\n\n    this.time.delayedCall(INTRO_HOLD_DURATION, () => this.beginIntroExplosion());\n  }\n\n  private drawGuide(): void {\n    const outlinePoints = this.config!.outline.map((point) => this.toCanvasPoint(point));\n    this.guideOverlay?.destroy();\n    const guide = this.add.graphics();\n    guide.fillStyle(0xffffff, 0.08);\n    guide.lineStyle(2, 0xffffff, 0.35);\n    guide.beginPath();\n    guide.moveTo(outlinePoints[0].x, outlinePoints[0].y);\n    for (let i = 1; i < outlinePoints.length; i++) {\n      guide.lineTo(outlinePoints[i].x, outlinePoints[i].y);\n    }\n    guide.closePath();\n    guide.fillPath();\n    guide.strokePath();\n    guide.setDepth(-20);\n    guide.setVisible(true);\n    guide.name = 'guide-overlay';\n    this.guideOverlay = guide;\n  }\n  private initializePiecesAtTarget(): void {\n    const config = this.config!;\n\n    config.pieces.forEach((piece) => {\n      const actualPoints = piece.points.map((pt) => this.toCanvasPoint(pt));\n      const anchor = this.toCanvasPoint(piece.anchor);\n      const geometry = this.buildPieceGeometry(actualPoints, anchor);\n\n      const shape = this.add.polygon(anchor.x, anchor.y, geometry.coords, 0x000000, 0);\n      shape.setDepth(10 + this.pieces.length);\n      shape.setFillStyle(FROST_BASE_COLOR, 1);\n      shape.setAlpha(1);\n      shape.setStrokeStyle(1.6, 0x142031, 0.6);\n\n      const index = this.pieces.length;\n      shape.setData('pieceIndex', index);\n\n      shape.on('pointerover', () => {\n        if (!shape.input?.enabled) {\n          return;\n        }\n        shape.setStrokeStyle(3.5, 0x000000, 0.9);\n      });\n\n      shape.on('pointerout', () => {\n        if (!shape.input?.enabled) {\n          return;\n        }\n        shape.setStrokeStyle(2.5, 0x000000, 0.9);\n      });\n\n      const origin = new Phaser.Math.Vector2(shape.displayOriginX, shape.displayOriginY);\n      shape.setPosition(anchor.x + origin.x, anchor.y + origin.y);\n\n      this.pieces.push({\n        id: piece.id,\n        target: geometry.target,\n        shape,\n        footprint: actualPoints,\n        shapePoints: piece.points,\n        placed: false,\n        snapTolerance: 0,\n        origin,\n        hitArea: geometry.hitArea,\n        scatterTarget: anchor.clone(),\n        restPosition: new Phaser.Math.Vector2(anchor.x + origin.x, anchor.y + origin.y),\n        restRotation: 0\n      });\n    });\n  }\n\n  private beginIntroExplosion(): void {\n    if (this.pieces.length === 0) {\n      this.preparePiecesForPuzzle();\n      return;\n    }\n\n    const scatterPositions: Phaser.Math.Vector2[] = [];\n    this.explosionActive = true;\n    this.explosionComplete = false;\n\n    this.pieces.forEach((piece, index) => {\n      const scatterAnchor = this.generateGroundScatterPosition(scatterPositions);\n      scatterPositions.push(scatterAnchor);\n      piece.scatterTarget = scatterAnchor;\n\n      this.stylePieceForBurst(piece, index);\n\n      const launchDelay = index * EXPLOSION_STAGGER;\n      this.time.delayedCall(launchDelay, () => this.launchPieceExplosion(piece));\n    });\n  }\n\n  private launchPieceExplosion(piece: PieceRuntime): void {\n    const start = new Phaser.Math.Vector2(piece.target.x + piece.origin.x, piece.target.y + piece.origin.y);\n    piece.shape.setPosition(start.x, start.y);\n    piece.shape.setScale(Phaser.Math.FloatBetween(0.96, 1.04));\n    piece.shape.rotation = Phaser.Math.FloatBetween(-0.12, 0.12);\n\n    const travelTime = Phaser.Math.FloatBetween(EXPLOSION_TRAVEL_TIME.min, EXPLOSION_TRAVEL_TIME.max);\n    const floorWorld = piece.scatterTarget.y + piece.origin.y;\n    const dx = piece.scatterTarget.x - piece.target.x;\n    const dy = floorWorld - start.y;\n\n    const baseVx = dx / travelTime;\n    const baseVy = (dy - 0.5 * EXPLOSION_GRAVITY * travelTime * travelTime) / travelTime;\n\n    const horizontalBias = Math.sign(dx || Phaser.Math.FloatBetween(-1, 1));\n    const spreadAngle = Phaser.Math.FloatBetween(-Math.PI * 0.25, Math.PI * 0.25);\n    const burstAngle = spreadAngle + (horizontalBias * Math.PI * 0.5);\n    const burstMagnitude = Phaser.Math.Between(EXPLOSION_RADIAL_BOOST.min, EXPLOSION_RADIAL_BOOST.max);\n    const burst = new Phaser.Math.Vector2(Math.cos(burstAngle), Math.sin(burstAngle)).scale(burstMagnitude);\n\n    const downwardLift = Phaser.Math.Between(120, 220);\n    const velocity = new Phaser.Math.Vector2(baseVx + burst.x, baseVy - downwardLift + burst.y * 0.15);\n\n    piece.velocity = velocity;\n    piece.angularVelocity = Phaser.Math.FloatBetween(EXPLOSION_SPIN_RANGE.min, EXPLOSION_SPIN_RANGE.max);\n    piece.exploding = true;\n    piece.hasLaunched = true;\n  }\n\n  private generateGroundScatterPosition(existing: Phaser.Math.Vector2[]): Phaser.Math.Vector2 {\n    const minX = EXPLOSION_WALL_MARGIN + 12;\n    const maxX = this.scale.width - EXPLOSION_WALL_MARGIN - 12;\n    const minY = Math.max(this.scale.height - 140, 120);\n    const maxY = this.scale.height - 54;\n\n    const pickCandidate = () =>\n      new Phaser.Math.Vector2(\n        Phaser.Math.Between(minX, maxX),\n        Phaser.Math.Between(minY, maxY)\n      );\n\n    for (let attempt = 0; attempt < 12; attempt++) {\n      const candidate = pickCandidate();\n      const tooClose = existing.some((pos) => Phaser.Math.Distance.Between(pos.x, pos.y, candidate.x, candidate.y) < 72);\n      if (!tooClose) {\n        return candidate;\n      }\n      if (attempt === 11) {\n        return candidate;\n      }\n    }\n\n    return pickCandidate();\n  }\n\n  private preparePiecesForPuzzle(): void {\n    this.guideOverlay?.setVisible(true);\n    this.helpLabel?.setVisible(true);\n\n    this.pieces.forEach((piece, index) => {\n      const restPosition = piece.restPosition ?? new Phaser.Math.Vector2(piece.shape.x, piece.shape.y);\n      const clampedX = Phaser.Math.Clamp(restPosition.x, EXPLOSION_WALL_MARGIN, this.scale.width - EXPLOSION_WALL_MARGIN);\n      const clampedY = Phaser.Math.Clamp(restPosition.y, 96, this.scale.height - 40);\n      piece.shape.setPosition(clampedX, clampedY);\n      const startRotation = piece.restRotation ?? 0;\n      piece.shape.rotation = startRotation;\n      piece.shape.setScale(1);\n      this.recordRestingState(piece);\n      piece.shape.setData('pieceIndex', index);\n      this.stylePieceForPuzzle(piece, index);\n      this.input.setDraggable(piece.shape);\n    });\n\n    this.placedCount = 0;\n    this.startTime = this.time.now;\n    this.refreshSnapToleranceForAll();\n    this.emitter?.emit('puzzle-reset');\n    this.explosionComplete = true;\n    this.explosionActive = false;\n  }\n\n  private refreshSnapToleranceForAll(): void {\n    const multiplier = this.debugEnabled ? SNAP_DEBUG_MULTIPLIER : 1;\n    this.pieces.forEach((piece) => {\n      if (piece.placed) {\n        return;\n      }\n      piece.snapTolerance = calculateSnapTolerance(piece.shape, multiplier);\n    });\n  }\n\n  update(_time: number, delta: number): void {\n    if (this.explosionActive && !this.explosionComplete) {\n      this.updateExplosion(delta);\n    }\n  }\n\n  private updateExplosion(delta: number): void {\n    const dt = delta / 1000;\n    if (dt <= 0) {\n      return;\n    }\n\n    let settledCount = 0;\n    let launchedCount = 0;\n\n    this.pieces.forEach((piece) => {\n      if (!piece.hasLaunched) {\n        return;\n      }\n\n      launchedCount += 1;\n\n      if (!piece.exploding || !piece.velocity) {\n        settledCount += 1;\n        return;\n      }\n\n      const velocity = piece.velocity;\n      velocity.y += EXPLOSION_GRAVITY * dt;\n\n      piece.shape.x += velocity.x * dt;\n      piece.shape.y += velocity.y * dt;\n\n      if (piece.angularVelocity) {\n        piece.shape.rotation += piece.angularVelocity * dt;\n      }\n\n      const bounds = piece.shape.getBounds();\n      const leftLimit = EXPLOSION_WALL_MARGIN;\n      const rightLimit = this.scale.width - EXPLOSION_WALL_MARGIN;\n      const floorLimit = Math.min(this.scale.height - 40, piece.scatterTarget.y + piece.origin.y);\n\n      if (bounds.left < leftLimit) {\n        const overlap = leftLimit - bounds.left;\n        piece.shape.x += overlap;\n        if (velocity.x < 0) {\n          velocity.x = -velocity.x * EXPLOSION_WALL_DAMPING;\n        }\n      }\n\n      if (bounds.right > rightLimit) {\n        const overlap = bounds.right - rightLimit;\n        piece.shape.x -= overlap;\n        if (velocity.x > 0) {\n          velocity.x = -velocity.x * EXPLOSION_WALL_DAMPING;\n        }\n      }\n\n      const adjustedBounds = piece.shape.getBounds();\n\n      if (adjustedBounds.bottom > floorLimit) {\n        const overlap = adjustedBounds.bottom - floorLimit;\n        piece.shape.y -= overlap;\n\n        if (velocity.y > 0) {\n          velocity.y = -velocity.y * EXPLOSION_BOUNCE_DAMPING;\n          velocity.x *= EXPLOSION_GROUND_FRICTION;\n          if (piece.angularVelocity) {\n            piece.angularVelocity *= EXPLOSION_SPIN_DAMPING;\n          }\n\n          if (Math.abs(velocity.y) < EXPLOSION_MIN_REST_SPEED) {\n            piece.exploding = false;\n            piece.velocity = undefined;\n            piece.angularVelocity = undefined;\n            this.recordRestingState(piece);\n            settledCount += 1;\n            return;\n          }\n        }\n      }\n\n      const currentBounds = piece.shape.getBounds();\n      const speed = Math.hypot(velocity.x, velocity.y);\n      if (speed < EXPLOSION_MIN_REST_SPEED && currentBounds.bottom >= floorLimit - 0.5) {\n        piece.exploding = false;\n        piece.velocity = undefined;\n        piece.angularVelocity = undefined;\n        const correction = currentBounds.bottom - floorLimit;\n        if (correction > 0) {\n          piece.shape.y -= correction;\n        }\n        this.recordRestingState(piece);\n        settledCount += 1;\n      }\n    });\n\n    if (launchedCount > 0 && settledCount === launchedCount) {\n      this.explosionComplete = true;\n      this.explosionActive = false;\n      this.time.delayedCall(EXPLOSION_REST_DELAY, () => this.preparePiecesForPuzzle());\n    }\n  }\n\n  private updateDraggingPieceTransform(piece: PieceRuntime, pointer?: Phaser.Input.Pointer | Phaser.Math.Vector2): void {\n    if (!piece.dragOffset) {\n      return;\n    }\n\n    let pointerPosition: Phaser.Math.Vector2 | undefined;\n\n    if (pointer) {\n      if ('worldX' in pointer) {\n        pointerPosition = piece.dragPointer ?? new Phaser.Math.Vector2();\n        pointerPosition.set(pointer.worldX ?? pointer.x, pointer.worldY ?? pointer.y);\n      } else {\n        pointerPosition = piece.dragPointer ?? new Phaser.Math.Vector2();\n        pointerPosition.set(pointer.x, pointer.y);\n      }\n      piece.dragPointer = pointerPosition;\n    } else if (piece.dragPointer) {\n      pointerPosition = piece.dragPointer;\n    }\n\n    if (!pointerPosition) {\n      return;\n    }\n\n    const startRotation = piece.dragStartRotation ?? 0;\n    const delta = piece.shape.rotation - startRotation;\n    const rotatedOffset = piece.dragOffset.clone().rotate(delta);\n    piece.shape.setPosition(pointerPosition.x + rotatedOffset.x, pointerPosition.y + rotatedOffset.y);\n  }\n\n  private setupDragHandlers(): void {\n    this.input.on('dragstart', (pointer: Phaser.Input.Pointer, gameObject: Phaser.GameObjects.GameObject) => {\n      const index = gameObject.getData('pieceIndex');\n      if (index == null) {\n        return;\n      }\n\n      const piece = this.pieces[index as number];\n      if (!piece || piece.placed) {\n        return;\n      }\n\n      piece.isDragging = true;\n      const pointerWorldX = pointer.worldX ?? pointer.x;\n      const pointerWorldY = pointer.worldY ?? pointer.y;\n      piece.dragStartRotation = piece.shape.rotation;\n      piece.dragOffset = new Phaser.Math.Vector2(piece.shape.x - pointerWorldX, piece.shape.y - pointerWorldY);\n      piece.dragPointer = new Phaser.Math.Vector2(pointerWorldX, pointerWorldY);\n      this.updateDraggingPieceTransform(piece, pointer);\n\n      const rotationTweenDuration = Math.max(260, Math.abs(piece.shape.rotation) * 380);\n      const rotationTween = Math.abs(piece.shape.rotation) > 0.001\n        ? this.tweens.add({\n            targets: piece.shape,\n            rotation: 0,\n            duration: rotationTweenDuration,\n            ease: Phaser.Math.Easing.Cubic.Out\n          })\n        : null;\n\n      piece.restRotation = 0;\n\n      if (rotationTween) {\n        rotationTween.setCallback('onUpdate', () => {\n          if (!piece.isDragging) {\n            return;\n          }\n          this.updateDraggingPieceTransform(piece);\n        });\n      } else {\n        piece.shape.rotation = 0;\n        this.updateDraggingPieceTransform(piece, pointer);\n      }\n\n      piece.shape.setDepth(50 + index);\n      piece.shape.input!.cursor = 'grabbing';\n      if (this.debugEnabled) {\n        this.showDebugOutline(piece);\n      }\n    });\n\n    this.input.on('drag', (pointer: Phaser.Input.Pointer, gameObject, dragX: number, dragY: number) => {\n      const index = gameObject.getData('pieceIndex');\n      if (index == null) {\n        return;\n      }\n\n      const piece = this.pieces[index as number];\n      if (!piece || piece.placed) {\n        return;\n      }\n\n      if (!piece.dragOffset) {\n        piece.shape.setPosition(dragX, dragY);\n        return;\n      }\n\n      this.updateDraggingPieceTransform(piece, pointer);\n    });\n\n    this.input.on('dragend', (_pointer, gameObject: Phaser.GameObjects.GameObject) => {\n      const index = gameObject.getData('pieceIndex');\n      if (index == null) {\n        return;\n      }\n\n      const piece = this.pieces[index as number];\n      if (!piece || piece.placed) {\n        return;\n      }\n\n      piece.isDragging = false;\n      piece.dragOffset = undefined;\n      piece.dragPointer = undefined;\n      piece.dragStartRotation = undefined;\n\n      const snapped = this.trySnapPiece(piece);\n\n      if (!snapped) {\n        piece.shape.input!.cursor = 'grab';\n        piece.shape.setDepth(30 + index);\n      }\n\n      if (this.debugEnabled) {\n        this.hideDebugOutline();\n      }\n    });\n\n    this.input.on('pointerup', () => this.debugEnabled && this.hideDebugOutline());\n    this.input.on('pointerupoutside', () => this.debugEnabled && this.hideDebugOutline());\n  }\n\n  private trySnapPiece(piece: PieceRuntime): boolean {\n    const anchorX = piece.shape.x - piece.origin.x;\n    const anchorY = piece.shape.y - piece.origin.y;\n    const distance = Phaser.Math.Distance.Between(anchorX, anchorY, piece.target.x, piece.target.y);\n    if (distance > piece.snapTolerance) {\n      return false;\n    }\n\n    this.placePiece(piece);\n    return true;\n  }\n\n  private placePiece(piece: PieceRuntime): void {\n    if (piece.placed) {\n      return;\n    }\n\n    piece.isDragging = false;\n    piece.dragOffset = undefined;\n    piece.dragPointer = undefined;\n    piece.dragStartRotation = undefined;\n\n    piece.placed = true;\n    piece.shape.disableInteractive();\n    piece.shape.setDepth(100 + this.placedCount);\n\n    const targetPosition = new Phaser.Math.Vector2(\n      piece.target.x + piece.origin.x,\n      piece.target.y + piece.origin.y\n    );\n\n    const tween = this.tweens.add({\n      targets: piece.shape,\n      x: targetPosition.x,\n      y: targetPosition.y,\n      duration: SNAP_ANIMATION_DURATION,\n      ease: Phaser.Math.Easing.Cubic.Out\n    });\n\n    if (!tween) {\n      piece.shape.setPosition(targetPosition.x, targetPosition.y);\n    }\n\n    piece.shape.setStrokeStyle(1.4, 0x1d2f52, 0.7);\n    piece.shape.setFillStyle(FROST_BASE_COLOR, 0.18);\n\n    this.placedCount += 1;\n\n    this.emitter?.emit('puzzle-piece-placed', {\n      pieceId: piece.id,\n      placedCount: this.placedCount,\n      totalPieces: this.pieces.length\n    });\n\n    if (this.placedCount === this.pieces.length) {\n      const elapsedSeconds = (this.time.now - this.startTime) / 1000;\n      this.showCompletionBanner(elapsedSeconds);\n      this.emitter?.emit('puzzle-complete');\n    }\n  }\n\n  private showCompletionBanner(totalSeconds: number): void {\n    const banner = this.add.rectangle(this.scale.width * 0.5, 72, 480, 96, 0x183d2f, 0.82);\n    banner.setStrokeStyle(2, 0x8ddfcb, 0.9);\n\n    const message = this.add.text(this.scale.width * 0.5, 72, `Star restored in ${totalSeconds.toFixed(1)}s`, {\n      color: '#e3fff5',\n      fontSize: '30px',\n      fontFamily: 'Segoe UI, Roboto, sans-serif'\n    });\n    message.setOrigin(0.5, 0.5);\n  }\n\n  private toCanvasPoint(point: PuzzlePoint): Phaser.Math.Vector2 {\n    if (!this.config) {\n      return new Phaser.Math.Vector2(point.x, point.y);\n    }\n\n    const bounds = this.config.bounds;\n    const spanX = Math.max(bounds.width, 1e-6);\n    const spanY = Math.max(bounds.height, 1e-6);\n    const uniformScale = Math.min(this.scale.width / spanX, this.scale.height / spanY);\n\n    const offsetX = (this.scale.width - spanX * uniformScale) * 0.5;\n    const offsetY = (this.scale.height - spanY * uniformScale) * 0.5;\n\n    const x = offsetX + (point.x - bounds.minX) * uniformScale;\n    const y = offsetY + (point.y - bounds.minY) * uniformScale;\n    return new Phaser.Math.Vector2(x, y);\n  }\n\n  private computeCentroid(points: PuzzlePoint[]): PuzzlePoint {\n    if (points.length === 0) {\n      return { x: 0, y: 0 };\n    }\n\n    let area = 0;\n    let cx = 0;\n    let cy = 0;\n\n    for (let i = 0; i < points.length; i++) {\n      const current = points[i];\n      const next = points[(i + 1) % points.length];\n      const cross = current.x * next.y - next.x * current.y;\n      area += cross;\n      cx += (current.x + next.x) * cross;\n      cy += (current.y + next.y) * cross;\n    }\n\n    if (Math.abs(area) < 1e-6) {\n      const sum = points.reduce(\n        (acc, pt) => ({ x: acc.x + pt.x, y: acc.y + pt.y }),\n        { x: 0, y: 0 }\n      );\n      return { x: sum.x / points.length, y: sum.y / points.length };\n    }\n\n    area *= 0.5;\n    const factor = 1 / (6 * area);\n    return { x: cx * factor, y: cy * factor };\n  }\n\n  private round(value: number): number {\n    const factor = 1_000_000;\n    if (value === 0) {\n      return 0;\n    }\n\n    return (Math.sign(value) * Math.round(Math.abs(value) * factor)) / factor;\n  }\n\n  private buildPieceGeometry(points: Phaser.Math.Vector2[], anchor: Phaser.Math.Vector2): {\n    coords: number[];\n    hitArea: Phaser.Geom.Point[];\n    target: Phaser.Math.Vector2;\n  } {\n    if (points.length === 0) {\n      return { coords: [], hitArea: [], target: anchor.clone() };\n    }\n\n    const coords: number[] = [];\n    const hitArea: Phaser.Geom.Point[] = [];\n\n    const sanitized = [...points];\n    if (sanitized.length > 1) {\n      const first = sanitized[0];\n      const last = sanitized[sanitized.length - 1];\n      if (Math.abs(first.x - last.x) < 1e-6 && Math.abs(first.y - last.y) < 1e-6) {\n        sanitized.pop();\n      }\n    }\n\n    sanitized.forEach((point) => {\n      const localX = point.x - anchor.x;\n      const localY = point.y - anchor.y;\n      coords.push(localX, localY);\n      hitArea.push(new Phaser.Geom.Point(localX, localY));\n    });\n\n    return { coords, hitArea, target: anchor.clone() };\n  }\n\n  private showDebugOutline(piece: PieceRuntime): void {\n    if (!this.debugOverlay) {\n      this.debugOverlay = this.add.graphics();\n      this.debugOverlay.setDepth(150);\n    }\n\n    const overlay = this.debugOverlay;\n    overlay.clear();\n    overlay.setVisible(true);\n    overlay.lineStyle(4, 0x9efcff, 0.9);\n    overlay.fillStyle(0x9efcff, 0.12);\n\n    const points = piece.footprint;\n    if (points.length === 0) {\n      return;\n    }\n\n    overlay.beginPath();\n    overlay.moveTo(points[0].x, points[0].y);\n    for (let i = 1; i < points.length; i++) {\n      overlay.lineTo(points[i].x, points[i].y);\n    }\n    overlay.closePath();\n    overlay.strokePath();\n    overlay.fillPath();\n  }\n\n  private hideDebugOutline(): void {\n    if (!this.debugOverlay) {\n      return;\n    }\n\n    this.debugOverlay.clear();\n    this.debugOverlay.setVisible(false);\n  }\n\n  private createConfigFromSvg(svgContent: string): PuzzleConfig {\n    const parser = new DOMParser();\n    const documentNode = parser.parseFromString(svgContent, 'image/svg+xml');\n    const root = documentNode.documentElement;\n    const viewBoxRaw = root.getAttribute('viewBox');\n\n    if (!viewBoxRaw) {\n      throw new Error('SVG viewBox is required to normalise coordinates.');\n    }\n\n    const viewBoxValues = viewBoxRaw.split(/[\\s,]+/).map(Number);\n    if (viewBoxValues.length !== 4 || viewBoxValues.some((value) => Number.isNaN(value))) {\n      throw new Error('SVG viewBox is invalid.');\n    }\n\n    const [minX, minY, width, height] = viewBoxValues;\n    const outlineElement = documentNode.querySelector<SVGPathElement>('#outline');\n\n    if (!outlineElement) {\n      throw new Error('SVG outline path not found.');\n    }\n\n    const outlinePoints = this.samplePath(outlineElement);\n\n    const pieceElements = Array.from(documentNode.querySelectorAll<SVGPathElement>('[id^=\"piece_\"]'));\n\n    if (pieceElements.length === 0) {\n      throw new Error('No puzzle pieces found in SVG.');\n    }\n\n    const pieces = pieceElements\n      .map<PuzzlePiece | null>((element) => {\n        const id = element.id;\n        const d = element.getAttribute('d');\n        if (!d) {\n          return null;\n        }\n\n        const points = this.samplePath(element);\n        if (points.length < 3) {\n          return null;\n        }\n\n        const anchor = this.computeCentroid(points);\n        return {\n          id,\n          points,\n          anchor\n        };\n      })\n      .filter((piece): piece is PuzzlePiece => piece !== null)\n      .sort((a, b) => {\n        const numericA = parseInt(a.id.replace(/[^0-9]/g, ''), 10);\n        const numericB = parseInt(b.id.replace(/[^0-9]/g, ''), 10);\n        if (Number.isNaN(numericA) || Number.isNaN(numericB)) {\n          return a.id.localeCompare(b.id);\n        }\n        return numericA - numericB;\n      });\n\n    const bounds = this.computeBounds(outlinePoints, pieces);\n\n    return { outline: outlinePoints, pieces, bounds };\n  }\n\n  private samplePath(pathElement: SVGPathElement): PuzzlePoint[] {\n    const pathData = pathElement.getAttribute('d');\n    if (!pathData) {\n      return [];\n    }\n\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttribute('d', pathData);\n\n    const totalLength = path.getTotalLength();\n    if (!Number.isFinite(totalLength) || totalLength === 0) {\n      return [];\n    }\n\n    const steps = Math.max(Math.ceil(totalLength / 4), 64);\n    const points: PuzzlePoint[] = [];\n\n    for (let i = 0; i <= steps; i++) {\n      const distance = (i / steps) * totalLength;\n      const { x, y } = path.getPointAtLength(distance);\n      points.push({ x: this.round(x), y: this.round(y) });\n    }\n\n    return this.compactPoints(points);\n  }\n\n  private compactPoints(points: PuzzlePoint[], epsilon = 1e-4): PuzzlePoint[] {\n    if (points.length === 0) {\n      return points;\n    }\n\n    const compacted: PuzzlePoint[] = [points[0]];\n\n    for (let i = 1; i < points.length; i++) {\n      const prev = compacted[compacted.length - 1];\n      const current = points[i];\n      const dx = Math.abs(prev.x - current.x);\n      const dy = Math.abs(prev.y - current.y);\n      if (dx > epsilon || dy > epsilon) {\n        compacted.push(current);\n      }\n    }\n\n    if (compacted.length > 2) {\n      const first = compacted[0];\n      const last = compacted[compacted.length - 1];\n      if (Math.abs(first.x - last.x) > epsilon || Math.abs(first.y - last.y) > epsilon) {\n        compacted.push({ ...first });\n      }\n    }\n\n    return compacted;\n  }\n\n  private computeBounds(outline: PuzzlePoint[], pieces: PuzzlePiece[]): PuzzleBounds {\n    const allPoints: PuzzlePoint[] = [...outline];\n    pieces.forEach((piece) => {\n      allPoints.push(...piece.points);\n    });\n\n    if (allPoints.length === 0) {\n      return { minX: 0, minY: 0, maxX: 1, maxY: 1, width: 1, height: 1 };\n    }\n\n    let minX = allPoints[0].x;\n    let maxX = allPoints[0].x;\n    let minY = allPoints[0].y;\n    let maxY = allPoints[0].y;\n\n    for (let i = 1; i < allPoints.length; i++) {\n      const point = allPoints[i];\n      if (point.x < minX) minX = point.x;\n      if (point.x > maxX) maxX = point.x;\n      if (point.y < minY) minY = point.y;\n      if (point.y > maxY) maxY = point.y;\n    }\n\n    return {\n      minX,\n      minY,\n      maxX,\n      maxY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }\n\n  setDebugVisible(show: boolean): void {\n    this.debugEnabled = show;\n\n    if (!show) {\n      this.hideDebugOutline();\n    }\n\n    this.refreshSnapToleranceForAll();\n  }\n}\n"],"names":["CommonModule","Phaser","PuzzleScene","AppComponent","constructor","cdr","title","puzzleComplete","showDebug","ngAfterViewInit","gameHost","launchGame","host","nativeElement","width","height","game","Game","type","AUTO","parent","backgroundColor","banner","scale","mode","Scale","FIT","autoCenter","CENTER_BOTH","emitter","Events","EventEmitter","sceneEvents","scene","add","on","markForCheck","ngOnDestroy","removeAllListeners","undefined","destroy","toggleDebug","getScene","setDebugVisible","i0","ɵɵdirectiveInject","ChangeDetectorRef","selectors","viewQuery","AppComponent_Query","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_Template_button_click_8_listener","ɵɵrestoreView","_r1","ɵɵresetView","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ɵɵtextInterpolate1","styles","changeDetection","bootstrapApplication","provideAnimations","provideRouter","provideHttpClient","providers","catch","err","console","error","FROST_BASE_COLOR","SNAP_ANIMATION_DURATION","SNAP_BASE_FACTOR","SNAP_DEBUG_MULTIPLIER","INTRO_HOLD_DURATION","EXPLOSION_STAGGER","EXPLOSION_GRAVITY","EXPLOSION_TRAVEL_TIME","min","max","EXPLOSION_RADIAL_BOOST","EXPLOSION_SPIN_RANGE","EXPLOSION_BOUNCE_DAMPING","EXPLOSION_GROUND_FRICTION","EXPLOSION_SPIN_DAMPING","EXPLOSION_MIN_REST_SPEED","EXPLOSION_REST_DELAY","EXPLOSION_WALL_MARGIN","EXPLOSION_WALL_DAMPING","calculateSnapTolerance","shape","multiplier","bounds","getBounds","maxAxis","Math","dynamicTolerance","Clamp","Scene","resetDragState","piece","isDragging","dragOffset","dragPointer","dragStartRotation","updateScatterTargetFromShape","scatterTarget","Vector2","x","origin","y","stylePieceForBurst","depth","disableInteractive","setDepth","setFillStyle","setStrokeStyle","setAlpha","setScale","rotation","snapTolerance","velocity","angularVelocity","exploding","hasLaunched","restPosition","restRotation","stylePieceForPuzzle","setInteractive","Geom","Polygon","hitArea","Contains","input","cursor","placed","recordRestingState","pieces","placedCount","startTime","debugEnabled","explosionActive","explosionComplete","preload","load","text","init","data","create","svgText","cache","get","Error","config","createConfigFromSvg","cameras","main","setBackgroundColor","drawGuide","setupDragHandlers","initializePiecesAtTarget","helpLabel","color","fontSize","fontFamily","setOrigin","setVisible","time","delayedCall","beginIntroExplosion","outlinePoints","outline","map","point","toCanvasPoint","guideOverlay","guide","graphics","fillStyle","lineStyle","beginPath","moveTo","i","length","lineTo","closePath","fillPath","strokePath","name","forEach","actualPoints","points","pt","anchor","geometry","buildPieceGeometry","polygon","coords","index","setData","enabled","displayOriginX","displayOriginY","setPosition","push","id","target","footprint","shapePoints","clone","preparePiecesForPuzzle","scatterPositions","scatterAnchor","generateGroundScatterPosition","launchDelay","launchPieceExplosion","start","FloatBetween","travelTime","floorWorld","dx","dy","baseVx","baseVy","horizontalBias","sign","spreadAngle","PI","burstAngle","burstMagnitude","Between","burst","cos","sin","downwardLift","existing","minX","maxX","minY","maxY","pickCandidate","attempt","candidate","tooClose","some","pos","Distance","clampedX","clampedY","startRotation","setDraggable","now","refreshSnapToleranceForAll","emit","update","_time","delta","updateExplosion","dt","settledCount","launchedCount","leftLimit","rightLimit","floorLimit","left","overlap","right","adjustedBounds","bottom","abs","currentBounds","speed","hypot","correction","updateDraggingPieceTransform","pointer","pointerPosition","set","worldX","worldY","rotatedOffset","rotate","gameObject","getData","pointerWorldX","pointerWorldY","rotationTweenDuration","rotationTween","tweens","targets","duration","ease","Easing","Cubic","Out","setCallback","showDebugOutline","dragX","dragY","_pointer","snapped","trySnapPiece","hideDebugOutline","anchorX","anchorY","distance","placePiece","targetPosition","tween","pieceId","totalPieces","elapsedSeconds","showCompletionBanner","totalSeconds","rectangle","message","toFixed","spanX","spanY","uniformScale","offsetX","offsetY","computeCentroid","area","cx","cy","current","next","cross","sum","reduce","acc","factor","round","value","sanitized","first","last","pop","localX","localY","Point","debugOverlay","overlay","clear","svgContent","parser","DOMParser","documentNode","parseFromString","root","documentElement","viewBoxRaw","getAttribute","viewBoxValues","split","Number","isNaN","outlineElement","querySelector","samplePath","pieceElements","Array","from","querySelectorAll","element","d","filter","sort","a","b","numericA","parseInt","replace","numericB","localeCompare","computeBounds","pathElement","pathData","path","document","createElementNS","setAttribute","totalLength","getTotalLength","isFinite","steps","ceil","getPointAtLength","compactPoints","epsilon","compacted","prev","allPoints","show"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}